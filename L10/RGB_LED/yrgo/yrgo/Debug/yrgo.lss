
yrgo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b0  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000002df  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001c8  00000000  00000000  000002ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b06  00000000  00000000  000004b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d7  00000000  00000000  00001fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000099d  00000000  00000000  00002892  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000314  00000000  00000000  00003230  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000218  00000000  00000000  00003544  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000481  00000000  00000000  0000375c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000190  00000000  00000000  00003bdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000022e  0000022e  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003d70  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    000000a0  00000080  00000080  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.wait    0000001e  000001b2  000001b2  00000226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.sw1     0000000c  00000222  00000222  00000296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.led1    00000014  000001e6  000001e6  0000025a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.led2    00000014  000001fa  000001fa  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.led3    00000014  0000020e  0000020e  00000282  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.led     00000072  00000120  00000120  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.setup_p1 00000020  00000192  00000192  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_fini 00000002  00000236  00000236  000002aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__dummy_funcs_on_exit 00000002  00000238  00000238  000002ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_simulator_exit 00000002  0000023a  0000023a  000002ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.exit    00000016  000001d0  000001d0  00000244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text._Exit   00000004  00000232  00000232  000002a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
   8:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
   c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  10:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  14:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  18:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  1c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  20:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  24:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  28:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  2c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  30:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  34:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  38:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  3c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  40:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  44:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  48:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  4c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  50:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  54:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  58:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  5c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  60:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>
  64:	0c 94 17 01 	jmp	0x22e	; 0x22e <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <_etext>
  78:	0c 94 e8 00 	jmp	0x1d0	; 0x1d0 <exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

0000022e <__bad_interrupt>:
 22e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000080 <main>:
#include <stdio.h>



int main(void)
{
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	62 97       	sbiw	r28, 0x12	; 18
  8a:	0f b6       	in	r0, 0x3f	; 63
  8c:	f8 94       	cli
  8e:	de bf       	out	0x3e, r29	; 62
  90:	0f be       	out	0x3f, r0	; 63
  92:	cd bf       	out	0x3d, r28	; 61
	uint8_t colors[6][3] = {
  94:	fe 01       	movw	r30, r28
  96:	31 96       	adiw	r30, 0x01	; 1
  98:	82 e1       	ldi	r24, 0x12	; 18
  9a:	df 01       	movw	r26, r30
  9c:	1d 92       	st	X+, r1
  9e:	8a 95       	dec	r24
  a0:	e9 f7       	brne	.-6      	; 0x9c <main+0x1c>
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	89 83       	std	Y+1, r24	; 0x01
  a6:	8c 83       	std	Y+4, r24	; 0x04
  a8:	8e 83       	std	Y+6, r24	; 0x06
  aa:	89 87       	std	Y+9, r24	; 0x09
  ac:	8b 87       	std	Y+11, r24	; 0x0b
  ae:	8c 87       	std	Y+12, r24	; 0x0c
  b0:	8d 87       	std	Y+13, r24	; 0x0d
  b2:	8e 87       	std	Y+14, r24	; 0x0e
		{0, 0, 1}, // Blue
		{0, 1, 1}, // Cyan
		{1, 1, 0} // Yellow
	};

    setup_p1();
  b4:	0e 94 c9 00 	call	0x192	; 0x192 <setup_p1>
	
    while(1) {
		
		for(uint8_t i = 0; i < 6; i++){
  b8:	f1 2c       	mov	r15, r1
  ba:	2e c0       	rjmp	.+92     	; 0x118 <main+0x98>
			
			for(uint8_t j = 0; j < 3; j++){
				led(j + 1, colors[i][j]);
  bc:	8f 2d       	mov	r24, r15
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	fc 01       	movw	r30, r24
  c2:	ee 0f       	add	r30, r30
  c4:	ff 1f       	adc	r31, r31
  c6:	e8 0f       	add	r30, r24
  c8:	f9 1f       	adc	r31, r25
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	90 e0       	ldi	r25, 0x00	; 0
  ce:	8c 0f       	add	r24, r28
  d0:	9d 1f       	adc	r25, r29
  d2:	e8 0f       	add	r30, r24
  d4:	f9 1f       	adc	r31, r25
  d6:	e1 0f       	add	r30, r17
  d8:	f1 1d       	adc	r31, r1
  da:	80 81       	ld	r24, Z
  dc:	1f 5f       	subi	r17, 0xFF	; 255
  de:	61 e0       	ldi	r22, 0x01	; 1
  e0:	81 11       	cpse	r24, r1
  e2:	01 c0       	rjmp	.+2      	; 0xe6 <main+0x66>
  e4:	60 e0       	ldi	r22, 0x00	; 0
  e6:	81 2f       	mov	r24, r17
  e8:	0e 94 90 00 	call	0x120	; 0x120 <led>
  ec:	01 c0       	rjmp	.+2      	; 0xf0 <main+0x70>
  ee:	10 e0       	ldi	r17, 0x00	; 0
	
    while(1) {
		
		for(uint8_t i = 0; i < 6; i++){
			
			for(uint8_t j = 0; j < 3; j++){
  f0:	13 30       	cpi	r17, 0x03	; 3
  f2:	20 f3       	brcs	.-56     	; 0xbc <main+0x3c>
  f4:	00 e0       	ldi	r16, 0x00	; 0
  f6:	10 e0       	ldi	r17, 0x00	; 0
  f8:	0a c0       	rjmp	.+20     	; 0x10e <main+0x8e>
				led(j + 1, colors[i][j]);
			}
			for(uint16_t delay_ms = 0; delay_ms < 1000; delay_ms++){
				while(sw1());
  fa:	0e 94 11 01 	call	0x222	; 0x222 <sw1>
  fe:	81 11       	cpse	r24, r1
 100:	fc cf       	rjmp	.-8      	; 0xfa <main+0x7a>
				wait(1);
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <wait>
		for(uint8_t i = 0; i < 6; i++){
			
			for(uint8_t j = 0; j < 3; j++){
				led(j + 1, colors[i][j]);
			}
			for(uint16_t delay_ms = 0; delay_ms < 1000; delay_ms++){
 10a:	0f 5f       	subi	r16, 0xFF	; 255
 10c:	1f 4f       	sbci	r17, 0xFF	; 255
 10e:	08 3e       	cpi	r16, 0xE8	; 232
 110:	93 e0       	ldi	r25, 0x03	; 3
 112:	19 07       	cpc	r17, r25
 114:	90 f3       	brcs	.-28     	; 0xfa <main+0x7a>

    setup_p1();
	
    while(1) {
		
		for(uint8_t i = 0; i < 6; i++){
 116:	f3 94       	inc	r15
 118:	a5 e0       	ldi	r26, 0x05	; 5
 11a:	af 15       	cp	r26, r15
 11c:	40 f7       	brcc	.-48     	; 0xee <main+0x6e>
 11e:	cc cf       	rjmp	.-104    	; 0xb8 <main+0x38>

Disassembly of section .text.wait:

000001b2 <wait>:
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	08 c0       	rjmp	.+16     	; 0x1c8 <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b8:	ef e9       	ldi	r30, 0x9F	; 159
 1ba:	ff e0       	ldi	r31, 0x0F	; 15
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <wait+0xa>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <wait+0x10>
 1c2:	00 00       	nop
 1c4:	2f 5f       	subi	r18, 0xFF	; 255
 1c6:	3f 4f       	sbci	r19, 0xFF	; 255
 1c8:	28 17       	cp	r18, r24
 1ca:	39 07       	cpc	r19, r25
 1cc:	a8 f3       	brcs	.-22     	; 0x1b8 <wait+0x6>
 1ce:	08 95       	ret

Disassembly of section .text.sw1:

00000222 <sw1>:
 222:	18 9b       	sbis	0x03, 0	; 3
 224:	02 c0       	rjmp	.+4      	; 0x22a <sw1+0x8>
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	08 95       	ret
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	08 95       	ret

Disassembly of section .text.led1:

000001e6 <led1>:
 1e6:	88 23       	and	r24, r24
 1e8:	21 f0       	breq	.+8      	; 0x1f2 <led1+0xc>
 1ea:	85 b1       	in	r24, 0x05	; 5
 1ec:	82 60       	ori	r24, 0x02	; 2
 1ee:	85 b9       	out	0x05, r24	; 5
 1f0:	08 95       	ret
 1f2:	85 b1       	in	r24, 0x05	; 5
 1f4:	8d 7f       	andi	r24, 0xFD	; 253
 1f6:	85 b9       	out	0x05, r24	; 5
 1f8:	08 95       	ret

Disassembly of section .text.led2:

000001fa <led2>:
 1fa:	88 23       	and	r24, r24
 1fc:	21 f0       	breq	.+8      	; 0x206 <led2+0xc>
 1fe:	8b b1       	in	r24, 0x0b	; 11
 200:	80 64       	ori	r24, 0x40	; 64
 202:	8b b9       	out	0x0b, r24	; 11
 204:	08 95       	ret
 206:	8b b1       	in	r24, 0x0b	; 11
 208:	8f 7b       	andi	r24, 0xBF	; 191
 20a:	8b b9       	out	0x0b, r24	; 11
 20c:	08 95       	ret

Disassembly of section .text.led3:

0000020e <led3>:
 20e:	88 23       	and	r24, r24
 210:	21 f0       	breq	.+8      	; 0x21a <led3+0xc>
 212:	8b b1       	in	r24, 0x0b	; 11
 214:	80 62       	ori	r24, 0x20	; 32
 216:	8b b9       	out	0x0b, r24	; 11
 218:	08 95       	ret
 21a:	8b b1       	in	r24, 0x0b	; 11
 21c:	8f 7d       	andi	r24, 0xDF	; 223
 21e:	8b b9       	out	0x0b, r24	; 11
 220:	08 95       	ret

Disassembly of section .text.led:

00000120 <led>:
 120:	66 23       	and	r22, r22
 122:	d9 f0       	breq	.+54     	; 0x15a <led+0x3a>
 124:	81 30       	cpi	r24, 0x01	; 1
 126:	19 f4       	brne	.+6      	; 0x12e <led+0xe>
 128:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <led1>
 12c:	08 95       	ret
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	21 f4       	brne	.+8      	; 0x13a <led+0x1a>
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 fd 00 	call	0x1fa	; 0x1fa <led2>
 138:	08 95       	ret
 13a:	83 30       	cpi	r24, 0x03	; 3
 13c:	21 f4       	brne	.+8      	; 0x146 <led+0x26>
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	0e 94 07 01 	call	0x20e	; 0x20e <led3>
 144:	08 95       	ret
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <led1>
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	0e 94 fd 00 	call	0x1fa	; 0x1fa <led2>
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	0e 94 07 01 	call	0x20e	; 0x20e <led3>
 158:	08 95       	ret
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	21 f4       	brne	.+8      	; 0x166 <led+0x46>
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <led1>
 164:	08 95       	ret
 166:	82 30       	cpi	r24, 0x02	; 2
 168:	21 f4       	brne	.+8      	; 0x172 <led+0x52>
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <led2>
 170:	08 95       	ret
 172:	83 30       	cpi	r24, 0x03	; 3
 174:	21 f4       	brne	.+8      	; 0x17e <led+0x5e>
 176:	80 e0       	ldi	r24, 0x00	; 0
 178:	0e 94 07 01 	call	0x20e	; 0x20e <led3>
 17c:	08 95       	ret
 17e:	80 e0       	ldi	r24, 0x00	; 0
 180:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <led1>
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 fd 00 	call	0x1fa	; 0x1fa <led2>
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	0e 94 07 01 	call	0x20e	; 0x20e <led3>
 190:	08 95       	ret

Disassembly of section .text.setup_p1:

00000192 <setup_p1>:
 192:	82 e0       	ldi	r24, 0x02	; 2
 194:	84 b9       	out	0x04, r24	; 4
 196:	88 e0       	ldi	r24, 0x08	; 8
 198:	87 b9       	out	0x07, r24	; 7
 19a:	8a b1       	in	r24, 0x0a	; 10
 19c:	8f 77       	andi	r24, 0x7F	; 127
 19e:	8a b9       	out	0x0a, r24	; 10
 1a0:	8a b1       	in	r24, 0x0a	; 10
 1a2:	8f 7e       	andi	r24, 0xEF	; 239
 1a4:	8a b9       	out	0x0a, r24	; 10
 1a6:	8f e6       	ldi	r24, 0x6F	; 111
 1a8:	8a b9       	out	0x0a, r24	; 10
 1aa:	8b b1       	in	r24, 0x0b	; 11
 1ac:	8f 60       	ori	r24, 0x0F	; 15
 1ae:	8b b9       	out	0x0b, r24	; 11
 1b0:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000236 <_fini>:
 236:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000238 <__funcs_on_exit>:
 238:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000023a <__simulator_exit>:
 23a:	08 95       	ret

Disassembly of section .text.exit:

000001d0 <exit>:
 1d0:	ec 01       	movw	r28, r24
 1d2:	0e 94 1c 01 	call	0x238	; 0x238 <__funcs_on_exit>
 1d6:	0e 94 1b 01 	call	0x236	; 0x236 <_fini>
 1da:	ce 01       	movw	r24, r28
 1dc:	0e 94 1d 01 	call	0x23a	; 0x23a <__simulator_exit>
 1e0:	ce 01       	movw	r24, r28
 1e2:	0e 94 19 01 	call	0x232	; 0x232 <_Exit>

Disassembly of section .text._Exit:

00000232 <_Exit>:
 232:	0e 94 3e 00 	call	0x7c	; 0x7c <_exit>
